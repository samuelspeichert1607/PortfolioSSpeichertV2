<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zombies_male</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_debug_overlay(true);


dir=direction

Speed = 4;
Volonte = false


force = -7
have_seen = false 
can_attack = true
can_hurt = true
can_move = true
hpzombie = 100
hp_maxzombie = 100
Sight = 400;

alarm[1] = 1;


freeze = false

//Sprite

var getin;
getin = floor(random(22))
switch(getin)
{
  case 0:
        zombie_sprite = 0
        break;
  case 1:
        zombie_sprite = 1
        break;
  case 2:
        zombie_sprite = 2
        break;
  case 3:
        zombie_sprite = 3
        break;
  case 4:
        zombie_sprite = 4
        break;
  case 5:
        zombie_sprite = 5
        break;
  case 6:
        zombie_sprite = 6
        break;
  case 7:
        zombie_sprite = 7
        break;
  case 8:
        zombie_sprite = 8
        break;
  case 9:
        zombie_sprite = 9
        break;
  case 10:
        zombie_sprite = 10
        break;
  case 11:
        zombie_sprite = 11
        break;
  case 12:
        zombie_sprite = 12
        break;
  case 13:
        zombie_sprite = 13
        break;
  case 14:
        zombie_sprite = 14
        break;
  case 15:
        zombie_sprite = 15
        break;
  case 16:
        zombie_sprite = 16
        break;
  case 17:
        zombie_sprite = 17
        break;
  case 18:
        zombie_sprite = 18
        break;
  case 19:
        zombie_sprite = 19
        break;
  case 20:
        zombie_sprite = 20
        break;
  case 21:
        zombie_sprite = 21
        break;
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_deadzombie);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>freeze = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_attack = true
alarm[5] = 30
with obj_zombie_smash instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Boucle pour la volonté

if distance_to_object (obj_parent_character) &gt; 100
{
Volonte = false
}
if distance_to_object (obj_parent_character) &lt; 100
{
alarm[3] = 100
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////Boucle Pour le son, est liée à Alarm 1

//var getin;
//getin = floor(random(3))
//switch(getin)
//{
//  case 0:
        
    //    audio_falloff_set_model(audio_falloff_exponent_distance_clamped);
    //    audio_play_sound_at(snd_zombie_1, self.x, self.y, 0, 100, 1000, 1, false, 1);
     //   alarm[1] = 20;
   //     break;
 // case 1:
//        audio_falloff_set_model(audio_falloff_exponent_distance_clamped);
 //       audio_play_sound_at(snd_zombie_2, self.x, self.y, 0, 100, 1000, 1, false, 1);
 //       alarm[1] = 210;
//        break;
//  case 2:
//        audio_falloff_set_model(audio_falloff_exponent_distance_clamped);
//        audio_play_sound_at(snd_zombie_3, self.x, self.y, 0, 100, 1000, 1, false, 1);
//        alarm[1] = 320;
//        break;
//  case 3:
//        audio_falloff_set_model(audio_falloff_exponent_distance_clamped);
//        audio_play_sound_at(snd_zombie_4, self.x, self.y, 0, 100, 1000, 1, false, 1);
//        alarm[1] = 67;
//        break;
// }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Boucle Pour le son, est liée à Alarm 2

//if instance_exists(obj_parent_character)
//{
//if !collision_line(x,y,obj_parent_character.x,obj_parent_character.y,obj_parent_solid,0,1)
//{
//alarm[2] = 1
//}
//else
//{
//alarm[1] = 1
//}
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_hurt = true
can_attack = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if have_seen = true and distance_to_object(obj_parent_character) &lt; Sight and can_move = true and instance_exists(obj_parent_character) and freeze = false
{
dir=direction
grid=mp_grid_create(view_xview,view_yview,view_wview/64,view_hview/64,64,64);
path=path_add();



mp_grid_add_instances(grid,obj_parent_solid,1)  
mp_grid_path(grid,path,x,y,obj_parent_character.x,obj_parent_character.y,1);
path_start(path,Speed,'',1);




if distance_to_point(obj_parent_character.x,obj_parent_character.y) &lt; 64 &amp;&amp; collision_line(x,y,x+lengthdir_x(16,image_angle),y+lengthdir_y(16,image_angle),all,1,1)
    {
    path_end();
    }
}


//view_xview



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mouvement au hasard


if instance_exists (obj_parent_character)
if !collision_line(x,y,obj_parent_character.x,obj_parent_character.y,obj_parent_solid,0,1) or distance_to_object(obj_pistolball) &lt; 50 or distance_to_object(obj_shotgunball) &lt; 50
if distance_to_object (obj_parent_character) &lt; Sight
{
if can_hurt = true and can_move = true
 {
 have_seen = true
 Volonte = true
 alarm[3] = 100
 }
}


// Ils nous attaquent!
if distance_to_object (obj_parent_character) &lt; 1 and can_attack = true and freeze = false
{
alarm[5] = 30
instance_create(x,y,obj_zombie_smash);
can_attack = false
}




//Vie du zombie
if hpzombie &lt; 1
{
 instance_destroy()
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_car">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var dir;//we create a variable called "dir"
dir=point_direction(x,y,other.x,other.y)-180//we give the variable a value

x+=lengthdir_x(1,dir)
y+=lengthdir_y(1,dir)

if (obj_car.speed &gt; 10)
{
  hpzombie = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_old_zombie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var dir;//we create a variable called "dir"
dir=point_direction(x,y,other.x,other.y)-180//we give the variable a value

x+=lengthdir_x(1,dir)
y+=lengthdir_y(1,dir)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_alexis">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var dir;//we create a variable called "dir"
dir=point_direction(x,y,other.x,other.y)-180//we give the variable a value

x+=lengthdir_x(1,dir)
y+=lengthdir_y(1,dir)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shotgunball">
      <action>
        <libid>1</libid>
        <id>532</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_effect</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>y</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>13</kind>
            <string>128</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_towards_point(other.x,other.y,other.force)
react = 1 
hpzombie -= 35
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pistolball">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_towards_point(other.x,other.y,other.force) //move away from the other object.
react = 1 //The object is now reacting to another object hitting it.
hpzombie -= 20


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext(sprite_index,zombie_sprite,x,y,image_xscale,image_yscale,dir,-1,image_alpha);



draw_healthbar(x - 15,y - 30,x + 15,y - 35,(hpzombie / hp_maxzombie) * 100,c_black,c_gray,c_green,image_angle,true,true)


//Sprite Random
if have_seen = false
{
    var getin;
    getin = floor(random(4))
    switch(getin)
    {
      case 0:
            image_angle = 0
            break;
      case 1:
            image_angle = 90
            break;
      case 2:
            image_angle = 180
            break;
      case 3:
            image_angle = 270
            break;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>16,32</point>
  </PhysicsShapePoints>
</object>
