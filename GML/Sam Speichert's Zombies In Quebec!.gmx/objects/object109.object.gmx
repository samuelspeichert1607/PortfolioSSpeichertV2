<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zombie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mass = sprite_width * sprite_height;  


hpzombie  = 100
hp_maxzombie = 100



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grid=mp_grid_create(0,0,room_width/32,room_height/32,32,32);
path=path_add();
mp_grid_add_instances(grid,obj_parent_solid,true)
mp_grid_path(grid,path,x,y,obj_parent_character.x,obj_parent_character.y,true);
path_start(path,3,"",1);

if hpzombie &lt; 1
{
instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parent_character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir;//we create a variable called "dir"
dir=point_direction(x,y,other.x,other.y)-180//we give the variable a value

x+=lengthdir_x(1,dir)
y+=lengthdir_y(1,dir)





//Basic collision

//Set up vars
//var a,xoff,yoff,om,mm,mag;

//a = point_direction(x, y, other.x, other.y);    //Get the direction from the colliding object
//xoff = lengthdir_x(1, a);                       //Get the offset vector
//yoff = lengthdir_y(1, a);
//om = other.mass / mass;                         //start the fake "physics mass" calculations
//mm = mass / other.mass;
//mag = sqrt((om * om) + (mm * mm));
//om /= mag;
//mm /= mag;

//Move out of collision
//while (place_meeting(x, y, other))
//{
//x -= xoff * om; //Move the instance out of collision
//y -= yoff * om;
//other.x += xoff * mm; //Move the other instance out of the collision
//other.y += yoff * mm;
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object109">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir;//we create a variable called "dir"
dir=point_direction(x,y,other.x,other.y)-180//we give the variable a value

x+=lengthdir_x(1,dir)
y+=lengthdir_y(1,dir)





//Basic collision

//Set up vars
//var a,xoff,yoff,om,mm,mag;

//a = point_direction(x, y, other.x, other.y);    //Get the direction from the colliding object
//xoff = lengthdir_x(1, a);                       //Get the offset vector
//yoff = lengthdir_y(1, a);
//om = other.mass / mass;                         //start the fake "physics mass" calculations
//mm = mass / other.mass;
//mag = sqrt((om * om) + (mm * mm));
//om /= mag;
//mm /= mag;

//Move out of collision
//while (place_meeting(x, y, other))
//{
//x -= xoff * om; //Move the instance out of collision
//y -= yoff * om;
//other.x += xoff * mm; //Move the other instance out of the collision
//other.y += yoff * mm;
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pistolball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hpzombie -= 25
with other instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,direction,-1,image_alpha);

draw_healthbar(x - 15,y - 30,x + 15,y - 35,(hpzombie / hp_maxzombie) * 100,c_black,c_gray,c_green,image_angle,true,true)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
