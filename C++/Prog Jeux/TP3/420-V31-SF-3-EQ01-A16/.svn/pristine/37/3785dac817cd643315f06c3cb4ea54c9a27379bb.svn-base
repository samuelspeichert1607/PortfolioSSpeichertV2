#include "Game.h"

Game::Game()
{
	mainWin.create(VideoMode(LARGEUR_ECRAN, HAUTEUR_ECRAN, 32), "Projet SFML C++");
}

Game::~Game()
{

}

int Game::testTest()
{
	return 0;
}

int Game::run()
{
	

	//Synchonisation coordonnée à l'écran!
	mainWin.setVerticalSyncEnabled(true);

	while (mainWin.isOpen())
	{
		//////////////////////////////////////////////////////////////////////////
		// 1 - Gestion des entrées
		//////////////////////////////////////////////////////////////////////////
		Event event;

		//On passe l'événement en référence et celui-ci est chargé du dernier événement reçu!
		while (mainWin.pollEvent(event))
		{
			if (event.type == Event::Closed)
			{
				mainWin.close();
			}
		}


		//////////////////////////////////////////////////////////////////////////
		// 2 - Gestion de la logique 
		//////////////////////////////////////////////////////////////////////////

		update();

		//////////////////////////////////////////////////////////////////////////
		// 3 - Gestion de l'affichage 
		//////////////////////////////////////////////////////////////////////////

		draw();

		//Toujours important d'effacer l'écran précédent
		mainWin.clear();

		mainWin.display();
	}
	return EXIT_SUCCESS;
}

bool Game::init()
{
	/*backgroundT = new Texture;
	background = new Sprite;*/

	if (!backgroundT.loadFromFile("..\\..\\Sprites\\Terrain.png"))
	{
		return false;
	}
	background.setTexture(backgroundT);
	background.setPosition(0, 0);
	return true;
}

void Game::update()
{

}

void Game::draw()
{
	mainWin.draw(background);

	vector<Minion*>::iterator iterMinion;
	for (iterMinion = minionList.begin(); iterMinion != minionList.end(); iterMinion++)
	{
		mainWin.draw(*(*iterMinion));
	}

}